// Functions
// ---------

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@function to-rem($value, $_rem-base: $rem-base) {

    // Convert em into rem
    @if unit($value) == 'em' {
        $value: strip-unit($value) * 1rem;
    }

    // Convert 0rem into 0
    @if $value == 0rem { $value: 0; }

    // Handle percentages
    @if unit($value) == '%' {
        $value: strip-unit($value) / strip-unit($value) * 1rem;
    }

    // Convert to rem if not already
    @if unit($value) != 'rem' {
        $value: strip-unit($value) / strip-unit($_rem-base) * 1rem;
    }

    @return $value;
}

// Mixins
// ------

// Simplifies using breakpoints by providing an entry from $breakpoints as the
// single argument.
//
// TODO: Add suport for using explicit numeric (px, rem, em, etc) values
@mixin breakpoint($namedBreakpoint, $_breakpoints: $breakpoints) {

    // Create a variable to store the retrived breakpoint
    $breakpoint: 0;

    // If $breakpoitns has the key supplied, use the value attached to it.
    @if map-has-key($_breakpoints, $namedBreakpoint) {
        $breakpoint: map-get($_breakpoints, $namedBreakpoint);
    }

    // If we dont find the key in $breakpoints, create an error.
    @else {
        @error "No breakpoint called #{$namedBreakpoint} found in $breakpoints";
    }

    // If the breakpoint doesn't equal 0px, create a min-width breakpoint
    @if $breakpoint != 0 {
        @media screen and (min-width: #{$breakpoint}) {
            @content;
        }
    }

    // If the breakpoint equals 0px, simply print the content to save space.
    @else {
        @content;
    }

}

// Sets the heading font size base to the supplied argument
// and 130% of that size on after the 'medium' breakpoint
@mixin baseHeadingFontSize($baseFontSize, $scale: 1.3, $_breakpoints: $breakpoints) {

    // Set base font size
    font-size: $baseFontSize;

    // Set font size for 'medium' and up
    @include breakpoint(medium, $_breakpoints) {
        font-size: $baseFontSize * $scale;
    }

}